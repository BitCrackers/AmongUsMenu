name: Build Project

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  
jobs:
  Release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      
      - name: Build Release
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Release'
        
      - name: Build Release_Version
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Release_Version'
      
      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Release
          path: |
            ./Release/AmongUsMenu.dll
            ./Release_Version/version.dll
            ./LICENSE
            
      - name: Package Builds
        if: ${{ github.event_name == 'push' }}
        run: tar -caf Release_${{ github.sha }}.zip ./Release/AmongUsMenu.dll ./Release_Version/version.dll ./LICENSE
      
      - name: Automatic Releases
        if: ${{ github.event_name == 'push' }}
        uses: marvinpinto/action-automatic-releases@latest
        id: "automatic_releases"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-release"
          prerelease: true
          title: "Release Build"
          files: |
            Release_${{ github.sha }}.zip
      # note, we can invoke the discord webhook here and send it ${{ steps.automatic_releases.outputs.upload_url }} for a direct link to the release
      # if we do that we can probably remove the artifact uploads entirely unless there's a reason to keep them?

  Debug:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      
      - name: Build Debug
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Debug'
        
      - name: Build Debug_Version
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Debug_Version'
      
      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Debug
          path: |
            ./Debug/AmongUsMenu.dll
            ./Debug_Version/version.dll
            ./LICENSE
            
      - name: Package Builds
        if: ${{ github.event_name == 'push' }}
        run: tar -caf Debug_${{ github.sha }}.zip ./Debug/AmongUsMenu.dll ./Debug_Version/version.dll ./LICENSE
        
      - name: Automatic Releases
        if: ${{ github.event_name == 'push' }}
        uses: marvinpinto/action-automatic-releases@latest
        id: "automatic_releases"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-debug"
          prerelease: true
          title: "Debug Build"
          files: |
            Debug_${{ github.sha }}.zip
  
  Notification:
    if: ${{ github.event_name == 'push' && github.repository == "BitCrackers/AmongUsMenu" }}
    runs-on: ubuntu-latest
    needs: [Release, Debug]
    steps:
      - name: Discord Notification
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
          severity: info
          description: "Project Build"
          details: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          webhookUrl: ${{ secrets.DISCORD_BUILD_WEBHOOK }}
